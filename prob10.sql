-- MySQL dump 10.13  Distrib 8.0.31, for Win64 (x86_64)
--
-- Host: ballast.proxy.rlwy.net    Database: codeforge_problem
-- ------------------------------------------------------
-- Server version	9.3.0

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `problem`
--

DROP TABLE IF EXISTS `problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `problem` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `description` varchar(255) DEFAULT NULL,
  `difficulty` varchar(255) DEFAULT NULL,
  `examples` longtext,
  `method_name` varchar(255) DEFAULT NULL,
  `method_signature` varchar(255) DEFAULT NULL,
  `return_type` varchar(255) DEFAULT NULL,
  `sample_input` varchar(255) DEFAULT NULL,
  `sample_output` varchar(255) DEFAULT NULL,
  `template_code` longtext,
  `title` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problem`
--

LOCK TABLES `problem` WRITE;
/*!40000 ALTER TABLE `problem` DISABLE KEYS */;
INSERT INTO `problem` VALUES (1,'Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.','EASY','Example 1:\\nInput: nums = [2,7,11,15], target = 9\\nOutput: [0,1]\\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].\\n\\nExample 2:\\nInput: nums = [3,2,4], target = 6\\nOutput: [1,2]\\n\\nExample 3:\\nInput: nums = [3,3], target = 6\\nOutput: [0,1]','twoSum','int[] nums, int target','int[]','[2,7,11,15],9','[0,1]',NULL,'Two Sum'),(2,'Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], return 0.','EASY','Example 1:\\nInput: x = 123\\nOutput: 321\\n\\nExample 2:\\nInput: x = -123\\nOutput: -321\\n\\nExample 3:\\nInput: x = 120\\nOutput: 21\\n\\nExample 4:\\nInput: x = 0\\nOutput: 0','reverse','int x','int','123','321',NULL,'Reverse Integer'),(3,'Given an integer x, return the sum of its digits. If x is negative, consider the absolute value of x.','EASY','Example 1:\\nInput: x = 123\\nOutput: 6\\n\\nExample 2:\\nInput: x = -456\\nOutput: 15\\n\\nExample 3:\\nInput: x = 0\\nOutput: 0','sumOfDigits','int x','int','123','6',NULL,'Sum of Digits'),(4,'Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).','HARD','Example 1:\\nInput: nums1 = [1, 3], nums2 = [2]\\nOutput: 2.0\\n\\nExample 2:\\nInput: nums1 = [1, 2], nums2 = [3, 4]\\nOutput: 2.5','findMedianSortedArrays','int[] nums1, int[] nums2','double','[1, 3]\n[2]','2.0',NULL,'Median of Two Sorted Arrays'),(5,'Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.\n\nNotice that the solution set must not contain duplicate triplets.','MEDIUM','Example 1:\\nInput: nums = [-1,0,1,2,-1,-4]\\nOutput: [[-1,-1,2],[-1,0,1]]\\n\\nExample 2:\\nInput: nums = [0,0,0]\\nOutput: [[0,0,0]]','threeSum','int[] nums','List<List<Integer>>','[-1,0,1,2,-1,-4]','[[-1,-1,2],[-1,0,1]]',NULL,'3Sum'),(6,'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.','MEDIUM','Example 1:\nInput: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7,0,8]\n\nExample 2:\nInput: l1 = [0], l2 = [0]\nOutput: [0]','addTwoNumbers','ListNode l1, ListNode l2','ListNode','[2,4,3]\n[5,6,4]','[7,0,8]',NULL,'Add Two Numbers'),(7,'Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer (similar to C/C++\'s atoi function)','MEDIUM','Example 1:\\nInput: s = \\\"42\\\"\\nOutput: 42\\n\\nExample 2:\\nInput: s = \\\"   -42\\\"\\nOutput: -42\\n\\nExample 3:\\nInput: s = \\\"4193 with words\\\"\\nOutput: 4193\\n\\nExample 4:\\nInput: s = \\\"words and 987\\\"\\nOutput: 0\\n\\nExample 5:\\nInput: s = \\\"-91283472332\\\"\\nOutput: -2147483648','myAtoi','String s','int','\"42\"','42',NULL,'String to Integer (atoi)'),(8,'Given a string s containing just the characters \'(\', \')\', \'{\', \'}\', \'[\' and \']\', determine if the input string is valid.','EASY','Example 1:\\nInput: s = \\\"()\\\"\\nOutput: true\\n\\nExample 2:\\nInput: s = \\\"()[]{}\\\"\\nOutput: true\\n\\nExample 3:\\nInput: s = \\\"(]\\\"\\nOutput: false','isValid','String s','boolean','\"()[]{}\"','true',NULL,'Valid Parentheses'),(9,'Given an integer x, return true if x is a palindrome, and false otherwise.','EASY','Example 1:\\nInput: x = 121\\nOutput: true\\n\\nExample 2:\\nInput: x = -121\\nOutput: false\\n\\nExample 3:\\nInput: x = 10\\nOutput: false\\n\\nExample 4:\\nInput: x = 0\\nOutput: true','isPalindrome','int x','boolean','121','true',NULL,'Palindrome Number'),(10,'Given an integer, convert it to a roman numeral.','MEDIUM','Example 1:\\nInput: num = 3\\nOutput: \"III\"\\n\\nExample 2:\\nInput: num = 58\\nOutput: \"LVIII\"\\nExplanation: L = 50, V = 5, III = 3\\n\\nExample 3:\\nInput: num = 1994\\nOutput: \"MCMXCIV\"\\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4','intToRoman','int num','String','1994','\"MCMXCIV\"',NULL,'Integer to Roman');
/*!40000 ALTER TABLE `problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problem_tags`
--

DROP TABLE IF EXISTS `problem_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `problem_tags` (
  `problem_id` bigint NOT NULL,
  `tags` varchar(255) DEFAULT NULL,
  KEY `FKiss624kebh6xf9q88ifretjy7` (`problem_id`),
  CONSTRAINT `FKiss624kebh6xf9q88ifretjy7` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problem_tags`
--

LOCK TABLES `problem_tags` WRITE;
/*!40000 ALTER TABLE `problem_tags` DISABLE KEYS */;
INSERT INTO `problem_tags` VALUES (1,'array'),(1,'hash table'),(2,'math'),(3,'math'),(4,'array'),(4,'binary search'),(4,'divide and conquer'),(5,'array'),(5,'two pointers'),(5,'sorting'),(6,'linked list'),(6,'math'),(7,'string'),(7,'conversion'),(8,'string'),(8,'stack'),(9,'math'),(10,'math'),(10,'string'),(10,'greedy');
/*!40000 ALTER TABLE `problem_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problem_templates`
--

DROP TABLE IF EXISTS `problem_templates`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `problem_templates` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `language` varchar(255) DEFAULT NULL,
  `main_code` text,
  `problem_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKlnio733q2q3yid2mg63odwpro` (`problem_id`),
  CONSTRAINT `FKlnio733q2q3yid2mg63odwpro` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problem_templates`
--

LOCK TABLES `problem_templates` WRITE;
/*!40000 ALTER TABLE `problem_templates` DISABLE KEYS */;
INSERT INTO `problem_templates` VALUES (1,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String line = sc.nextLine();\n        String[] parts = line.split(\"]\\s*,\\s*\");\n        int[] nums = Arrays.stream(parts[0].replace(\"[\", \"\").split(\",\"))\n                .map(String::trim)\n                .mapToInt(Integer::parseInt)\n                .toArray();\n        int target = Integer.parseInt(parts[1].trim());\n\n        Solution solution = new Solution();\n        int[] result = solution.twoSum(nums, target);\n\n        System.out.print(\"[\");\n        for (int i = 0; i < result.length; i++) {\n            System.out.print(result[i]);\n            if (i < result.length - 1) System.out.print(\",\");\n        }\n        System.out.println(\"]\");\n    }\n}',1),(2,'c','#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nextern int* twoSum(int* nums, int numsSize, int target, int* returnSize);\n\nint main() {\n    char input[256];\n    fgets(input, sizeof(input), stdin);\n\n    char* arrPart = strtok(input, \"]\");\n    char* targetPart = strtok(NULL, \",\");\n\n    int nums[100], n = 0;\n    char* p = strtok(arrPart, \"[, \");\n    while (p != NULL) {\n        nums[n++] = atoi(p);\n        p = strtok(NULL, \", \");\n    }\n\n    int target = atoi(targetPart);\n    int returnSize = 0;\n    int* result = twoSum(nums, n, target, &returnSize);\n\n    printf(\"[\");\n    for (int i = 0; i < returnSize; i++) {\n        printf(\"%d\", result[i]);\n        if (i < returnSize - 1) printf(\",\");\n    }\n    printf(\"]\\n\");\n\n    free(result);\n    return 0;\n}',1),(3,'cpp','#include <iostream>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <cctype>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    string line;\n    getline(cin, line);\n\n    size_t bracketClose = line.find(\"]\");\n    string numsPart = line.substr(0, bracketClose + 1);\n    string targetPart = line.substr(bracketClose + 2);\n\n    vector<int> nums;\n    string insideBrackets = numsPart.substr(numsPart.find(\"[\") + 1, bracketClose - numsPart.find(\"[\" ) - 1);\n    stringstream ss(insideBrackets);\n    string temp;\n    while (getline(ss, temp, \',\')) {\n        if (!temp.empty())\n            nums.push_back(stoi(temp));\n    }\n\n    int target = stoi(targetPart);\n\n    Solution solution;\n    vector<int> result = solution.twoSum(nums, target);\n\n    cout << \"[\";\n    for (size_t i = 0; i < result.size(); ++i) {\n        cout << result[i];\n        if (i < result.size() - 1) cout << \",\";\n    }\n    cout << \"]\" << endl;\n\n    return 0;\n}',1),(4,'python','import sys\n\ndef parse_input():\n    line = sys.stdin.readline().strip()\n    nums_str, target_str = line.split(\'],\')\n    nums = list(map(int, nums_str.strip(\'[]\').split(\',\')))\n    target = int(target_str)\n    return nums, target\n\nfrom solution import twoSum\n\nif __name__ == \"__main__\":\n    nums, target = parse_input()\n    result = twoSum(nums, target)\n    print(\"[\" + \",\".join(map(str, result)) + \"]\")',1),(5,'csharp','using System;\nusing System.Linq;\n\nclass Program {\n    static void Main(string[] args) {\n        var input = Console.ReadLine();\n        var parts = input.Split(\"]\");\n        var nums = parts[0].Trim(\'[\', \']\').Split(\',\').Select(int.Parse).ToArray();\n        var target = int.Parse(parts[1].Trim(\',\'));\n\n        var result = Solution.TwoSum(nums, target);\n        Console.Write(\"[\");\n        for (int i = 0; i < result.Length; i++) {\n            Console.Write(result[i]);\n            if (i < result.Length - 1) Console.Write(\",\");\n        }\n        Console.WriteLine(\"]\");\n    }\n}',1),(6,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x = sc.nextInt();\n        Solution solution = new Solution();\n        System.out.println(solution.reverse(x));\n    }\n}',2),(7,'c','#include <stdio.h>\n#include <stdlib.h>\n#include <limits.h>\n\nextern int reverse(int x);\n\nint main() {\n    int x;\n    scanf(\"%d\", &x);\n    printf(\"%d\\n\", reverse(x));\n    return 0;\n}',2),(8,'cpp','#include <iostream>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    int x;\n    cin >> x;\n    Solution solution;\n    cout << solution.reverse(x) << endl;\n    return 0;\n}',2),(9,'python','if __name__ == \"__main__\":\n    import sys\n    x = int(sys.stdin.readline())\n    from solution import reverse\n    print(reverse(x))',2),(10,'csharp','using System;\n\nclass Solution {\n    public int Reverse(int x) {\n        long result = 0;\n        while (x != 0) {\n            result = result * 10 + x % 10;\n            x /= 10;\n        }\n        if (result < int.MinValue || result > int.MaxValue) return 0;\n        return (int)result;\n    }\n}\n\nclass Program {\n    static void Main(string[] args) {\n        int x = int.Parse(Console.ReadLine());\n        var solution = new Solution();\n        Console.WriteLine(solution.Reverse(x));\n    }\n}',2),(11,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x = sc.nextInt();\n        Solution solution = new Solution();\n        System.out.println(solution.sumOfDigits(x));\n    }\n}',3),(12,'c','#include <stdio.h>\n\nint sumOfDigits(int x);  // Khai báo hàm\n\nint main() {\n    int x;\n    scanf(\"%d\", &x);\n    printf(\"%d\\n\", sumOfDigits(x));\n    return 0;\n}',3),(13,'cpp','#include <iostream>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    int x;\n    cin >> x;\n\n    Solution solution;\n    cout << solution.sumOfDigits(x) << endl;\n\n    return 0;\n}',3),(14,'python','from solution import sumOfDigits\n\nif __name__ == \"__main__\":\n    import sys\n    x = int(sys.stdin.readline())\n    print(sumOfDigits(x))',3),(15,'csharp','using System;\n\nclass Solution {\n    public int SumOfDigits(int x) {\n        x = Math.Abs(x);\n        int sum = 0;\n        while (x > 0) {\n            sum += x % 10;\n            x /= 10;\n        }\n        return sum;\n    }\n}\n\nclass Program {\n    static void Main(string[] args) {\n        int x = int.Parse(Console.ReadLine());\n        var solution = new Solution();\n        Console.WriteLine(solution.SumOfDigits(x));\n    }\n}',3),(16,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] input = sc.useDelimiter(\"\\\\A\").next().split(\"\\\\n\");\n\n        String raw1 = input.length > 0 ? input[0] : \"\";\n        String raw2 = input.length > 1 ? input[1] : \"\";\n\n        String[] arr1 = raw1.replaceAll(\"[\\\\[\\\\] ]\", \"\").split(\",\");\n        String[] arr2 = raw2.replaceAll(\"[\\\\[\\\\] ]\", \"\").split(\",\");\n\n        int[] nums1 = arr1.length == 1 && arr1[0].isEmpty() ? new int[0] : new int[arr1.length];\n        int[] nums2 = arr2.length == 1 && arr2[0].isEmpty() ? new int[0] : new int[arr2.length];\n\n        for (int i = 0; i < nums1.length; i++) {\n            nums1[i] = Integer.parseInt(arr1[i]);\n        }\n        for (int i = 0; i < nums2.length; i++) {\n            nums2[i] = Integer.parseInt(arr2[i]);\n        }\n\n        Solution solution = new Solution();\n        double result = solution.findMedianSortedArrays(nums1, nums2);\n        System.out.println(result);\n    }\n}',4),(17,'c','#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n// Hàm đã được implement trong solution.c\ndouble findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size);\n\n// Hàm hỗ trợ parse input dạng \"[1, 2, 3]\"\nint parseArray(char* src, int* arr) {\n    int count = 0;\n    char* token = strtok(src, \"[,] \");\n    while (token != NULL) {\n        arr[count++] = atoi(token);\n        token = strtok(NULL, \"[,] \");\n    }\n    return count;\n}\n\nint main() {\n    char line[2000];\n    if (fgets(line, sizeof(line), stdin) == NULL) return 1;\n\n    // Tìm dấu \']\' chia 2 mảng\n    char* comma = strchr(line, \']\');\n    if (!comma) return 1;\n\n    *comma = \'\\0\';  // Kết thúc mảng đầu tiên\n    char* array1_str = line;\n    char* array2_str = comma + 2;  // Bỏ qua \",[\"\n\n    int nums1[500], nums2[500];\n    int n1 = parseArray(array1_str, nums1);\n    int n2 = parseArray(array2_str, nums2);\n\n    double result = findMedianSortedArrays(nums1, n1, nums2, n2);\n    printf(\"%.1f\\n\", result);  // In ra đúng định dạng \"2.0\"\n\n    return 0;\n}',4),(18,'cpp','#include <iostream>\n#include <vector>\n#include <sstream>\n#include <iomanip>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nvector<int> parseArray(const string& line) {\n    vector<int> result;\n    string num;\n    for (char ch : line) {\n        if (isdigit(ch) || ch == \'-\') {\n            num += ch;\n        } else if (!num.empty()) {\n            result.push_back(stoi(num));\n            num.clear();\n        }\n    }\n    if (!num.empty()) result.push_back(stoi(num));\n    return result;\n}\n\nint main() {\n    string line1, line2;\n    getline(cin, line1);\n    getline(cin, line2);\n\n    vector<int> nums1 = parseArray(line1);\n    vector<int> nums2 = parseArray(line2);\n\n    Solution solution;\n    double result = solution.findMedianSortedArrays(nums1, nums2);\n    cout << fixed << setprecision(1) << result << endl;\n    return 0;\n}',4),(19,'python','from solution import findMedianSortedArrays\nimport sys\n\nline = sys.stdin.readline().strip()\nparts = line.split(\"],[\")\n\nnums1_str = parts[0].lstrip(\"[\")\nnums2_str = parts[1].rstrip(\"]\")\n\nnums1 = list(map(int, nums1_str.split(\",\"))) if nums1_str else []\nnums2 = list(map(int, nums2_str.split(\",\"))) if nums2_str else []\n\nprint(findMedianSortedArrays(nums1, nums2))',4),(20,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String input = sc.nextLine().trim();\n        input = input.replaceAll(\"[\\\\[\\\\] ]\", \"\");\n        String[] parts = input.split(\",\");\n\n        int[] nums = new int[parts.length];\n        for (int i = 0; i < parts.length; i++) {\n            nums[i] = Integer.parseInt(parts[i]);\n        }\n\n        Solution solution = new Solution();\n        List<List<Integer>> result = solution.threeSum(nums);\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"[\");\n        for (int i = 0; i < result.size(); i++) {\n            sb.append(\"[\");\n            List<Integer> triplet = result.get(i);\n            for (int j = 0; j < triplet.size(); j++) {\n                sb.append(triplet.get(j));\n                if (j < triplet.size() - 1) sb.append(\",\");\n            }\n            sb.append(\"]\");\n            if (i < result.size() - 1) sb.append(\",\");\n        }\n        sb.append(\"]\");\n        System.out.println(sb.toString());\n    }\n}',5),(21,'c','#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n// Hàm đã được implement trong solution.c\nint** threeSum(int* nums, int numsSize, int* returnSize, int** returnColumnSizes);\n\nint parseArray(char* input, int* arr) {\n    int count = 0;\n    char* token = strtok(input, \"[,] \");\n    while (token != NULL) {\n        arr[count++] = atoi(token);\n        token = strtok(NULL, \"[,] \");\n    }\n    return count;\n}\n\nint main() {\n    char line[2000];\n    if (!fgets(line, sizeof(line), stdin)) return 1;\n\n    int nums[1000];\n    int n = parseArray(line, nums);\n\n    int returnSize;\n    int* returnColumnSizes;\n    int** result = threeSum(nums, n, &returnSize, &returnColumnSizes);\n\n    printf(\"[\");\n    for (int i = 0; i < returnSize; i++) {\n        printf(\"[%d,%d,%d]\", result[i][0], result[i][1], result[i][2]);\n        if (i < returnSize - 1) printf(\",\");\n        free(result[i]);\n    }\n    printf(\"]\\n\");\n    free(result);\n    free(returnColumnSizes);\n    return 0;\n}',5),(22,'cpp','#include <iostream>\n#include <vector>\n#include <sstream>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nvector<int> parseArray(const string& input) {\n    vector<int> result;\n    string num;\n    for (char ch : input) {\n        if (isdigit(ch) || ch == \'-\') {\n            num += ch;\n        } else if (!num.empty()) {\n            result.push_back(stoi(num));\n            num.clear();\n        }\n    }\n    if (!num.empty()) result.push_back(stoi(num));\n    return result;\n}\n\nint main() {\n    string line;\n    getline(cin, line);\n    vector<int> nums = parseArray(line);\n    Solution s;\n    vector<vector<int>> result = s.threeSum(nums);\n    cout << \"[\";\n    for (int i = 0; i < result.size(); i++) {\n        cout << \"[\";\n        for (int j = 0; j < result[i].size(); j++) {\n            cout << result[i][j];\n            if (j < result[i].size() - 1) cout << \",\";\n        }\n        cout << \"]\";\n        if (i < result.size() - 1) cout << \",\";\n    }\n    cout << \"]\" << endl;\n    return 0;\n}',5),(23,'python','from solution import threeSum\nimport sys\nimport json\n\nline = sys.stdin.readline().strip()\nnums = json.loads(line) if line else []\nresult = threeSum(nums)\nprint(json.dumps(result, separators=(\',\', \':\')))',5),(24,'java','import java.util.*;\n\nclass ListNode {\n    int val;\n    ListNode next;\n    ListNode() {}\n    ListNode(int val) { this.val = val; }\n    ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String line = sc.nextLine();\n\n        String[] parts = line.split(\"\\\\],\\\\[\");\n        if (parts.length != 2) {\n            System.out.println(\"Invalid input format\");\n            return;\n        }\n\n        String left = parts[0].replaceAll(\"[\\\\[\\\\] ]\", \"\");\n        String right = parts[1].replaceAll(\"[\\\\[\\\\] ]\", \"\");\n\n        ListNode l1 = parseList(left);\n        ListNode l2 = parseList(right);\n\n        Solution s = new Solution();\n        ListNode result = s.addTwoNumbers(l1, l2);\n        printList(result);\n    }\n\n    private static ListNode parseList(String s) {\n        if (s.isEmpty()) return null;\n        String[] tokens = s.split(\",\");\n        ListNode dummy = new ListNode(0);\n        ListNode curr = dummy;\n        for (String token : tokens) {\n            curr.next = new ListNode(Integer.parseInt(token));\n            curr = curr.next;\n        }\n        return dummy.next;\n    }\n\n    private static void printList(ListNode node) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"[\");\n        while (node != null) {\n            sb.append(node.val);\n            node = node.next;\n            if (node != null) sb.append(\",\");\n        }\n        sb.append(\"]\");\n        System.out.println(sb);\n    }\n}',6),(25,'c','#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstruct ListNode {\n    int val;\n    struct ListNode *next;\n};\n\nstruct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2);\n\nstruct ListNode* parseList(char* line) {\n    struct ListNode dummy = {0, NULL};\n    struct ListNode* curr = &dummy;\n    char* token = strtok(line, \"[], \");\n    while (token) {\n        struct ListNode* node = malloc(sizeof(struct ListNode));\n        node->val = atoi(token);\n        node->next = NULL;\n        curr->next = node;\n        curr = node;\n        token = strtok(NULL, \"[], \");\n    }\n    return dummy.next;\n}\n\nvoid printList(struct ListNode* node) {\n    printf(\"[\");\n    while (node) {\n        printf(\"%d\", node->val);\n        if (node->next) printf(\",\");\n        node = node->next;\n    }\n    printf(\"]\\n\");\n}\n\nint main() {\n    char input[2000], list1[1000], list2[1000];\n    fgets(input, sizeof(input), stdin);\n\n    // Cắt list1 và list2\n    char* mid = strchr(input, \']\');\n    if (mid) {\n        int len1 = mid - input + 1;\n        strncpy(list1, input, len1);\n        list1[len1] = \'\\0\';\n\n        char* rest = mid + 1;\n        while (*rest && (*rest == \',\' || *rest == \' \')) rest++;\n        strcpy(list2, rest);\n\n        struct ListNode* l1 = parseList(list1);\n        struct ListNode* l2 = parseList(list2);\n        struct ListNode* result = addTwoNumbers(l1, l2);\n        printList(result);\n    }\n\n    return 0;\n}',6),(26,'cpp','#include <iostream>\n#include <vector>\n#include <sstream>\nusing namespace std;\n\nstruct ListNode {\n    int val;\n    ListNode *next;\n    ListNode(int x) : val(x), next(NULL) {}\n};\n\nListNode* parseList(const string& line) {\n    ListNode dummy(0);\n    ListNode* curr = &dummy;\n    string num;\n    for (char ch : line) {\n        if (isdigit(ch) || ch == \'-\') num += ch;\n        else if (!num.empty()) {\n            curr->next = new ListNode(stoi(num));\n            curr = curr->next;\n            num.clear();\n        }\n    }\n    if (!num.empty()) curr->next = new ListNode(stoi(num));\n    return dummy.next;\n}\n\nvoid printList(ListNode* node) {\n    cout << \"[\";\n    while (node) {\n        cout << node->val;\n        if (node->next) cout << \",\";\n        node = node->next;\n    }\n    cout << \"]\" << endl;\n}\n\nListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n    ListNode* dummy = new ListNode(0);\n    ListNode* current = dummy;\n    int carry = 0;\n\n    while (l1 != nullptr || l2 != nullptr || carry > 0) {\n        int sum = carry;\n        if (l1) {\n            sum += l1->val;\n            l1 = l1->next;\n        }\n        if (l2) {\n            sum += l2->val;\n            l2 = l2->next;\n        }\n\n        carry = sum / 10;\n        current->next = new ListNode(sum % 10);\n        current = current->next;\n    }\n\n    return dummy->next;\n}\n\nint main() {\n    string input;\n    getline(cin, input);\n\n    size_t sep = input.find(\"],[\");\n    string list1 = input.substr(0, sep + 1);\n    string list2 = input.substr(sep + 2);\n\n    ListNode* l1 = parseList(list1);\n    ListNode* l2 = parseList(list2);\n    ListNode* result = addTwoNumbers(l1, l2);\n    printList(result);\n    return 0;\n}',6),(27,'python','from solution import addTwoNumbers\nimport sys\n\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\ndef parseList(s):\n    s = s.strip(\'[]\\n\')\n    if not s:\n        return None\n    nums = list(map(int, s.split(\',\')))\n    dummy = ListNode()\n    curr = dummy\n    for num in nums:\n        curr.next = ListNode(num)\n        curr = curr.next\n    return dummy.next\n\ndef printList(node):\n    res = []\n    while node:\n        res.append(node.val)\n        node = node.next\n    print(\"[\" + \",\".join(map(str, res)) + \"]\")\n\nline = sys.stdin.readline().strip()\n\nif \'],[\' in line:\n    parts = line.split(\'],[\')\n    list1 = parts[0].lstrip(\'[\')\n    list2 = parts[1].rstrip(\']\')\nelse:\n    list1 = line\n    list2 = sys.stdin.readline().strip()\n\nl1 = parseList(list1)\nl2 = parseList(list2)\nresult = addTwoNumbers(l1, l2)\nprintList(result)',6),(28,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.nextLine();\n        Solution solution = new Solution();\n        System.out.println(solution.myAtoi(s));\n    }\n}',7),(29,'c','#include <stdio.h>\n\nextern int myAtoi(char* s);\n\nint main() {\n    char s[1000];\n    fgets(s, sizeof(s), stdin);\n    printf(\"%d\\n\", myAtoi(s));\n    return 0;\n}',7),(30,'cpp','#include <iostream>\n#include <string>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    string s;\n    getline(cin, s);\n    Solution solution;\n    cout << solution.myAtoi(s) << endl;\n    return 0;\n}',7),(31,'python','if __name__ == \"__main__\":\n    import sys\n    s = sys.stdin.readline().strip()\n    from solution import myAtoi\n    print(myAtoi(s))',7),(32,'csharp','using System;\n\nclass Solution {\n    public int MyAtoi(string s) {\n        // your implementation here\n        return 0;\n    }\n}\n\nclass Program {\n    static void Main(string[] args) {\n        string s = Console.ReadLine();\n        var solution = new Solution();\n        Console.WriteLine(solution.MyAtoi(s));\n    }\n}',7),(33,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.nextLine();\n        Solution solution = new Solution();\n        System.out.println(solution.isValid(s));\n    }\n}',8),(34,'c','#include <stdio.h>\n#include <stdbool.h>\n\nextern bool isValid(char* s);\n\nint main() {\n    char s[1000];\n    fgets(s, sizeof(s), stdin);\n    printf(\"%s\\n\", isValid(s) ? \"true\" : \"false\");\n    return 0;\n}',8),(35,'cpp','#include <iostream>\n#include <string>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    string s;\n    getline(cin, s);\n    Solution solution;\n    cout << (solution.isValid(s) ? \"true\" : \"false\") << endl;\n    return 0;\n}',8),(36,'python','if __name__ == \"__main__\":\n    import sys\n    s = sys.stdin.readline().strip()\n    from solution import isValid\n    print(str(isValid(s)).lower())',8),(37,'csharp','using System;\n\nclass Solution {\n    public bool IsValid(string s) {\n        // your implementation here\n        return false;\n    }\n}\n\nclass Program {\n    static void Main(string[] args) {\n        string s = Console.ReadLine();\n        var solution = new Solution();\n        Console.WriteLine(solution.IsValid(s));\n    }\n}',8),(38,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x = sc.nextInt();\n        Solution solution = new Solution();\n        System.out.println(solution.isPalindrome(x));\n    }\n}',9),(39,'c','#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nextern bool isPalindrome(int x);\n\nint main() {\n    int x;\n    scanf(\"%d\", &x);\n    printf(\"%s\\n\", isPalindrome(x) ? \"true\" : \"false\");\n    return 0;\n}',9),(40,'cpp','#include <iostream>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    int x;\n    cin >> x;\n    Solution solution;\n    cout << (solution.isPalindrome(x) ? \"true\" : \"false\") << endl;\n    return 0;\n}',9),(41,'python','if __name__ == \"__main__\":\n    import sys\n    x = int(sys.stdin.readline())\n    from solution import isPalindrome\n    print(str(isPalindrome(x)).lower())',9),(42,'csharp','using System;\n\nclass Solution {\n    public bool IsPalindrome(int x) {\n        if (x < 0) return false;\n        int original = x, reversed = 0;\n        while (x != 0) {\n            int digit = x % 10;\n            if (reversed > (int.MaxValue - digit) / 10) return false;\n            reversed = reversed * 10 + digit;\n            x /= 10;\n        }\n        return original == reversed;\n    }\n}\n\nclass Program {\n    static void Main(string[] args) {\n        int x = int.Parse(Console.ReadLine());\n        var solution = new Solution();\n        Console.WriteLine(solution.IsPalindrome(x).ToString().ToLower());\n    }\n}',9),(43,'java','import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int num = sc.nextInt();\n        Solution solution = new Solution();\n        System.out.println(solution.intToRoman(num));\n    }\n}',10),(44,'c','#include <stdio.h>\n#include <stdlib.h>\n\nextern char* intToRoman(int num);\n\nint main() {\n    int num;\n    scanf(\"%d\", &num);\n    printf(\"%s\\n\", intToRoman(num));\n    return 0;\n}',10),(45,'cpp','#include <iostream>\nusing namespace std;\n\n#include \"solution.cpp\"\n\nint main() {\n    int num;\n    cin >> num;\n    Solution solution;\n    cout << solution.intToRoman(num) << endl;\n    return 0;\n}',10),(46,'python','if __name__ == \"__main__\":\n    import sys\n    num = int(sys.stdin.readline())\n    from solution import intToRoman\n    print(intToRoman(num))',10),(47,'csharp','using System;\n\nclass Solution {\n    public string IntToRoman(int num) {\n        string[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\n        string[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\n        string[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\n        string[] ones = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\n        return thousands[num / 1000] +\n               hundreds[(num % 1000) / 100] +\n               tens[(num % 100) / 10] +\n               ones[num % 10];\n    }\n}\n\nclass Program {\n    static void Main(string[] args) {\n        int num = int.Parse(Console.ReadLine());\n        var solution = new Solution();\n        Console.WriteLine(solution.IntToRoman(num));\n    }\n}',10);
/*!40000 ALTER TABLE `problem_templates` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `problem_testcase`
--

DROP TABLE IF EXISTS `problem_testcase`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `problem_testcase` (
  `problem_id` bigint NOT NULL,
  `input` varchar(255) DEFAULT NULL,
  `output` varchar(255) DEFAULT NULL,
  KEY `FKqh9a96wmcw6yi2q20rtxix6t8` (`problem_id`),
  CONSTRAINT `FKqh9a96wmcw6yi2q20rtxix6t8` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `problem_testcase`
--

LOCK TABLES `problem_testcase` WRITE;
/*!40000 ALTER TABLE `problem_testcase` DISABLE KEYS */;
INSERT INTO `problem_testcase` VALUES (1,'[2,7,11,15],9','[0,1]'),(1,'[3,2,4],6','[1,2]'),(1,'[3,3],6','[0,1]'),(2,'123','321'),(2,'-123','-321'),(2,'120','21'),(3,'123','6'),(3,'-456','15'),(3,'0','0'),(4,'[1, 3],[2]','2.0'),(4,'[1, 2],[3, 4]','2.5'),(5,'[-1,0,1,2,-1,-4]','[[-1,-1,2],[-1,0,1]]'),(5,'[0,0,0]','[[0,0,0]]'),(6,'[2,4,3],[5,6,4]','[7,0,8]'),(6,'[0],[0]','[0]'),(6,'[9,9,9,9,9,9,9],[9,9,9,9]','[8,9,9,9,0,0,0,1]'),(7,'42','42'),(7,'-042','-42'),(7,'1337c0d3','1337'),(7,'0-1','0'),(7,'words and 987','0'),(8,'()','true'),(8,'()[]{}','true'),(8,'(]','false'),(9,'121','true'),(9,'-121','false'),(9,'10','false'),(9,'0','true'),(10,'3749','MMMDCCXLIX'),(10,'58','LVIII'),(10,'1994','MCMXCIV');
/*!40000 ALTER TABLE `problem_testcase` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `submission`
--

DROP TABLE IF EXISTS `submission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `submission` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `code` longtext,
  `created_at` datetime(6) DEFAULT NULL,
  `error_message` text,
  `execution_time_ms` bigint DEFAULT NULL,
  `language` varchar(255) DEFAULT NULL,
  `output` text,
  `problem_id` bigint DEFAULT NULL,
  `status` varchar(255) DEFAULT NULL,
  `user_id` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `submission`
--

LOCK TABLES `submission` WRITE;
/*!40000 ALTER TABLE `submission` DISABLE KEYS */;
INSERT INTO `submission` VALUES (1,'Map<Integer, Integer> map = new HashMap<>();\r\nfor (int i = 0; i < nums.length; i++) {\r\n    int complement = target - nums[i];\r\n    if (map.containsKey(complement)) {\r\n        return new int[]{map.get(complement), i};\r\n    }\r\n    map.put(nums[i], i);\r\n}\r\nreturn new int[]{};','2025-05-11 03:20:21.853313',NULL,2086,'java','[TestResult[input=[2,7,11,15],9, expectedOutput=[0,1], actualOutput=[0,1], passed=true, errorMessage=, executionTimeMs=2086], TestResult[input=[3,2,4],6, expectedOutput=[1,2], actualOutput=[1,2], passed=true, errorMessage=, executionTimeMs=1622], TestResult[input=[3,3],6, expectedOutput=[0,1], actualOutput=[0,1], passed=true, errorMessage=, executionTimeMs=1446]]',1,'PASS','duy01'),(2,'Map<Integer, Integer> map = new HashMap<>();\r\nfor (int i = 0; i < nums.length; i++) {\r\n    int complement = target - nums[i];\r\n    if (map.containsKey(complement)) {\r\n        return new int[]{map.get(complement), i};\r\n    }\r\n    map.put(nums[i], i);\r\n}\r\nreturn new int[]{};','2025-05-11 03:24:07.343988',NULL,1590,'java','[TestResult[input=[2,7,11,15],9, expectedOutput=[0,1], actualOutput=[0,1], passed=true, errorMessage=, executionTimeMs=1590], TestResult[input=[3,2,4],6, expectedOutput=[1,2], actualOutput=[1,2], passed=true, errorMessage=, executionTimeMs=1334], TestResult[input=[3,3],6, expectedOutput=[0,1], actualOutput=[0,1], passed=true, errorMessage=, executionTimeMs=1994]]',1,'PASS','duy01'),(3,'String[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\r\n        String[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n        String[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n        String[] ones = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n        return thousands[num / 1000] +\r\n               hundreds[(num % 1000) / 100] +\r\n               tens[(num % 100) / 10] +\r\n               ones[num % 10];','2025-05-16 11:16:37.071546','',NULL,'java','MMMDCCXLIX',10,'PASS','duy01'),(4,'String[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\r\n        String[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n        String[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n        String[] ones = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n        return thousands[num / 1000] +\r\n               hundreds[(num % 1000) / 100] +\r\n               tens[(num % 100) / 10] +\r\n               ones[num % 10];','2025-05-16 11:16:45.725556',NULL,1681,'java','[TestResult[input=3749, expectedOutput=MMMDCCXLIX, actualOutput=MMMDCCXLIX, passed=true, errorMessage=, executionTimeMs=1681], TestResult[input=58, expectedOutput=LVIII, actualOutput=LVIII, passed=true, errorMessage=, executionTimeMs=1365], TestResult[input=1994, expectedOutput=MCMXCIV, actualOutput=MCMXCIV, passed=true, errorMessage=, executionTimeMs=1467]]',10,'PASS','duy01'),(5,'String[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\r\n        String[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n        String[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n        String[] ones = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n        return thousands[num / 1000] +\r\n               hundreds[(num % 1000) / 100] +\r\n               tens[(num % 100) / 10] +\r\n               ones[num % 100];','2025-05-16 11:17:02.925953','Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: Index 49 out of bounds for length 10\n	at Solution.intToRoman(Solution.java:9)\n	at Main.main(Main.java:8)\n',NULL,'java','',10,'FAIL','duy01'),(6,'String[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\r\n        String[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n        String[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n        String[] ones = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n        return thousands[num / 1000] +\r\n               hundreds[(num % 1000) / 100] +\r\n               tens[(num % 100) / 10] +1\r\n               ones[num % 10];','2025-05-16 11:17:17.930399','Solution.java:11: error: \';\' expected\n               tens[(num % 100) / 10] +1\n                                        ^\nSolution.java:12: error: not a statement\n               ones[num % 10];\n                   ^\n2 errors\n',NULL,'java','',10,'FAIL','duy01'),(7,'String[] thousands = {\"\", \"M\", \"MM\", \"MMM\"};\r\n        String[] hundreds = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n        String[] tens = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n        String[] ones = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n        return thousands[num / 1000] +\r\n               hundreds[(num % 1000) / 100] +\r\n               tens[(num % 100) / 10] +1+\r\n               ones[num % 10];','2025-05-16 11:17:40.648183','',NULL,'java','MMMDCCXL1IX',10,'FAIL','duy01'),(8,'// Write your code here\r\n char *result = malloc(20 * sizeof(char));\r\n    result[0] = \'\\0\';\r\n\r\n    char *thousands[] = {\"\", \"M\", \"MM\", \"MMM\"};\r\n    char *hundreds[]  = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n    char *tens[]      = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n    char *ones[]      = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n\r\n    strcat(result, thousands[num / 1000]);\r\n    strcat(result, hundreds[(num % 1000) / 100]);\r\n    strcat(result, tens[(num % 100) / 10]);\r\n    strcat(result, ones[num % 10]);\r\n\r\n    return result;','2025-05-16 11:17:59.257915',NULL,1109,'c','[TestResult[input=3749, expectedOutput=MMMDCCXLIX, actualOutput=MMMDCCXLIX, passed=true, errorMessage=, executionTimeMs=1109], TestResult[input=58, expectedOutput=LVIII, actualOutput=LVIII, passed=true, errorMessage=, executionTimeMs=508], TestResult[input=1994, expectedOutput=MCMXCIV, actualOutput=MCMXCIV, passed=true, errorMessage=, executionTimeMs=495]]',10,'PASS','duy01'),(9,'// Write your code here\r\n string thousands[] = {\"\", \"M\", \"MM\", \"MMM\"};\r\n        string hundreds[]  = {\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"};\r\n        string tens[]      = {\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"};\r\n        string ones[]      = {\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"};\r\n\r\n        return thousands[num / 1000] +\r\n               hundreds[(num % 1000) / 100] +\r\n               tens[(num % 100) / 10] +\r\n               ones[num % 10];','2025-05-16 11:18:22.449557',NULL,2773,'cpp','[TestResult[input=3749, expectedOutput=MMMDCCXLIX, actualOutput=MMMDCCXLIX, passed=true, errorMessage=, executionTimeMs=2773], TestResult[input=58, expectedOutput=LVIII, actualOutput=LVIII, passed=true, errorMessage=, executionTimeMs=2196], TestResult[input=1994, expectedOutput=MCMXCIV, actualOutput=MCMXCIV, passed=true, errorMessage=, executionTimeMs=2267]]',10,'PASS','duy01'),(10,'    thousands = [\"\", \"M\", \"MM\", \"MMM\"]\r\n    hundreds  = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"]\r\n    tens      = [\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"]\r\n    ones      = [\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"]\r\n\r\n    return (\r\n        thousands[num // 1000] +\r\n        hundreds[(num % 1000) // 100] +\r\n        tens[(num % 100) // 10] +\r\n        ones[num % 10]\r\n    )','2025-05-16 11:19:13.251030',NULL,613,'python','[TestResult[input=3749, expectedOutput=MMMDCCXLIX, actualOutput=MMMDCCXLIX, passed=true, errorMessage=, executionTimeMs=613], TestResult[input=58, expectedOutput=LVIII, actualOutput=LVIII, passed=true, errorMessage=, executionTimeMs=466], TestResult[input=1994, expectedOutput=MCMXCIV, actualOutput=MCMXCIV, passed=true, errorMessage=, executionTimeMs=473]]',10,'PASS','duy01');
/*!40000 ALTER TABLE `submission` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-05-18  2:35:48
